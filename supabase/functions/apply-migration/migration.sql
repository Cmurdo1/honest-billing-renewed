-- Migration to add missing schema components

-- Create stripe_orders table
CREATE TABLE IF NOT EXISTS public.stripe_orders (
    id bigint NOT NULL,
    checkout_session_id text NOT NULL,
    payment_intent_id text,
    customer_id text,
    amount_subtotal numeric,
    amount_total numeric,
    currency text,
    payment_status text,
    status text,
    created_at timestamp with time zone DEFAULT now(),
    updated_at timestamp with time zone DEFAULT now()
);

ALTER TABLE public.stripe_orders OWNER TO postgres;

ALTER TABLE public.stripe_orders ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.stripe_orders_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY public.stripe_orders
    ADD CONSTRAINT stripe_orders_pkey PRIMARY KEY (id);

-- Create verify_stripe_subscriptions_table function
CREATE OR REPLACE FUNCTION public.verify_stripe_subscriptions_table()
RETURNS boolean
LANGUAGE plpgsql
SECURITY DEFINER
AS $$
DECLARE
  table_exists boolean := false;
  can_query boolean := false;
BEGIN
  -- Check if table exists
  SELECT EXISTS(
    SELECT 1 FROM information_schema.tables
    WHERE table_schema = 'public'
    AND table_name = 'stripe_subscriptions'
  ) INTO table_exists;

  -- Try to query the table
  IF table_exists THEN
    BEGIN
      PERFORM 1 FROM stripe_subscriptions LIMIT 1;
      can_query := true;
    EXCEPTION WHEN OTHERS THEN
      can_query := false;
    END;
  END IF;

  RETURN table_exists AND can_query;
END;
$$;

GRANT EXECUTE ON FUNCTION public.verify_stripe_subscriptions_table() TO authenticated;
